name: Deploy PR Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths-ignore:
      - "**.md"
      - "!docs/**"

# Prevent concurrent deployments for the same PR
concurrency:
  group: pr-preview-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  deploy-preview:
    name: Deploy PR Preview to Cloudflare Pages
    runs-on: ubuntu-latest
    # Skip if PR is from a fork (security: forks don't have access to secrets)
    if: github.event.pull_request.head.repo.full_name == github.repository

    steps:
      - name: Checkout code (PR branch)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Checkout content files from content branch
        run: |
          set -e  # Exit on error

          echo "📥 Fetching content from content branch..."
          git fetch origin content

          echo "📂 Checking out content files..."
          git checkout origin/content -- docs/ i18n/ static/images/

          # Validate content exists
          echo "🔍 Validating content..."

          if [ ! -d "docs" ] || [ -z "$(ls -A docs 2>/dev/null)" ]; then
            echo "❌ Error: docs/ directory is empty or missing"
            echo "Cannot proceed with build - documentation content is required"
            exit 1
          fi

          if [ ! -d "i18n" ] || [ -z "$(ls -A i18n 2>/dev/null)" ]; then
            echo "⚠️  Warning: i18n/ directory is empty or missing"
            echo "Build will proceed but translations may be unavailable"
          fi

          if [ ! -d "static/images" ] || [ -z "$(ls -A static/images 2>/dev/null)" ]; then
            echo "⚠️  Warning: static/images/ directory is empty or missing"
            echo "Build will proceed but images may be unavailable"
          fi

          echo "✅ Content validation successful"
          echo "📊 Content statistics:"
          find docs -name "*.md" -type f 2>/dev/null | wc -l | xargs echo "  - English docs:"
          find i18n -name "*.md" -type f 2>/dev/null | wc -l | xargs echo "  - Localized docs:"
          find static/images -type f 2>/dev/null | wc -l | xargs echo "  - Images:"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build documentation
        run: bun run build

      - name: Deploy to Cloudflare Pages (PR Preview)
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy build --project-name comapeo-docs --branch pr-${{ github.event.pull_request.number }} --commit-dirty=true

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const previewUrl = `https://pr-${prNumber}.comapeo-docs.pages.dev`;

            // Check if comment already exists
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const botComment = comments.data.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('🚀 Preview Deployment')
            );

            const commentBody = `## 🚀 Preview Deployment

            Your documentation preview is ready!

            **Preview URL:** ${previewUrl}

            This preview will update automatically when you push new commits to this PR.

            ---

            <sub>Built with commit ${context.payload.pull_request.head.sha.substring(0, 7)}</sub>`;

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody,
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody,
              });
            }

      - name: Deployment summary
        run: |
          echo "🚀 **PR Preview Deployment Complete!**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Documentation built successfully" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Deployed to Cloudflare Pages" >> $GITHUB_STEP_SUMMARY
          echo "- 🌐 Preview URL: https://pr-${{ github.event.pull_request.number }}.comapeo-docs.pages.dev" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "This preview will update automatically with new commits." >> $GITHUB_STEP_SUMMARY
